@page "/addTag"
@using ExpenseManager.Components.Layout
@using Components.Model;
@using System.Text.Json;
@using Components.Utilities;
<div class="flex justify-center bg-gradient-to-r from-blue-50 to-purple-50 min-h-screen">

    <div class="mt-12 w-3/4 max-w-4xl rounded-lg bg-white p-8 shadow-lg">
        <h3 class="mb-6 text-3xl font-extrabold text-gray-800">Tag Management</h3>

        <!-- Input field and button to add a tag -->
        <div class="mb-8 flex items-center gap-4">
            <input @bind="newTag"
                   placeholder="Enter a new tag"
                   class="w-full max-w-md rounded-full border border-gray-300 bg-gray-50 p-3 shadow-sm focus:border-purple-500 focus:outline-none focus:ring-2 focus:ring-purple-300" />
            <button @onclick="AddNewTag"
                    class="rounded-full bg-gradient-to-r from-purple-500 to-blue-500 px-6 py-3 font-semibold text-white shadow-md transition-transform duration-300 hover:scale-105 hover:from-purple-600 hover:to-blue-600">
                Add Tag
            </button>
        </div>

        <!-- Display the default tags -->
        <h4 class="mb-4 text-lg font-semibold text-gray-700">Default Tags:</h4>
        <div class="mb-8 grid grid-cols-2 gap-4">
            <span class="inline-block rounded-full bg-blue-100 px-4 py-2 text-sm font-medium text-blue-600 shadow">Yearly</span>
            <span class="inline-block rounded-full bg-green-100 px-4 py-2 text-sm font-medium text-green-600 shadow">Monthly</span>
            <span class="inline-block rounded-full bg-red-100 px-4 py-2 text-sm font-medium text-red-600 shadow">Food</span>
            <span class="inline-block rounded-full bg-yellow-100 px-4 py-2 text-sm font-medium text-yellow-600 shadow">Drinks</span>
            <span class="inline-block rounded-full bg-purple-100 px-4 py-2 text-sm font-medium text-purple-600 shadow">Clothes</span>
            <span class="inline-block rounded-full bg-pink-100 px-4 py-2 text-sm font-medium text-pink-600 shadow">Gadgets</span>
            <span class="inline-block rounded-full bg-indigo-100 px-4 py-2 text-sm font-medium text-indigo-600 shadow">Miscellaneous</span>
            <span class="inline-block rounded-full bg-teal-100 px-4 py-2 text-sm font-medium text-teal-600 shadow">Fuel</span>
            <span class="inline-block rounded-full bg-orange-100 px-4 py-2 text-sm font-medium text-orange-600 shadow">Rent</span>
            <span class="inline-block rounded-full bg-gray-100 px-4 py-2 text-sm font-medium text-gray-600 shadow">EMI</span>
            <span class="inline-block rounded-full bg-lime-100 px-4 py-2 text-sm font-medium text-lime-600 shadow">Party</span>
        </div>

        <!-- Display the list of user-added tags -->
        <h4 class="mb-4 text-lg font-semibold text-gray-700">Your Added Tags:</h4>
        <ul class="space-y-4">
            @foreach (var tag in tags)
            {
                <li class="flex items-center justify-between rounded-lg border border-gray-200 bg-gray-50 p-4 shadow">
                    <span class="text-gray-800">@tag</span>
                    <button @onclick="() => RemoveTag(tag)"
                            class="rounded bg-red-500 px-3 py-1 text-white font-medium transition-transform duration-300 hover:scale-105 hover:bg-red-600">
                        Remove
                    </button>
                </li>
            }
        </ul>
    </div>
</div>

@code {
    private List<string> tags = new List<string>();
    private string newTag;

    protected override void OnInitialized()
    {
        LoadTags();
    }

    private void LoadTags()
    {
        tags = Utils.GetTags();
    }

    private void SaveTags()
    {
        // Save tags to tag.json file
        var json = System.Text.Json.JsonSerializer.Serialize(tags);
        File.WriteAllText(Utils.TAGS, json);
    }

    private void AddNewTag()
    {
        if (!string.IsNullOrWhiteSpace(newTag) && !tags.Contains(newTag))
        {
            tags.Add(newTag);
            SaveTags();
            newTag = string.Empty;
        }
    }

    private void RemoveTag(string tag)
    {
        tags.Remove(tag);
        SaveTags();
    }
}
